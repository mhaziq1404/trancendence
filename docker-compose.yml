version: '3.9'

volumes:
  tr:
    name: tr
    driver: local
    driver_opts:
      type: none
      device: /home/mmuhamad/transcendence-data/data
      o: bind
  db:
    name: db
    driver: local
    driver_opts:
      type: none
      device: /home/mmuhamad/transcendence-data/db
      o: bind

services:

  # database:
  #   build:
  #    context: ./requirements/database
  #    dockerfile: Dockerfile
  #   container_name: tr-database
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   networks:
  #     - transcendence
  #   volumes:
  #     - db:/var/lib/postgresql/data

  backend:
    build:
     context: ./requirements/back-end
     dockerfile: Dockerfile
    container_name: tr-backEnd
    # env_file:
    #   - .env
    restart: unless-stopped
    networks:
      - transcendence

  # nginx:
  #     build:
  #       context: ./requirements/nginx
  #       dockerfile: Dockerfile
  #     container_name: tr-nginx
  #     env_file:
  #       - .env
  #     restart: unless-stopped
  #     networks:
  #       - transcendence
  #     volumes:
  #       - tr:/etc/mount
  #     ports:
  #       - "443:443"
  #       - "80:80"

  # adminer:
  #   build:
  #    context: ./requirements/adminer
  #    dockerfile: Dockerfile
  #   container_name: tr-adminer
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   depends_on:
  #     - database
  #   networks:
  #     - transcendence
  #   ports:
  #     - '5432:5432'

  # vault:
  #   build:
  #    context: ./requirements/vault
  #    dockerfile: Dockerfile
  #   container_name: tr-vault
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   networks:
  #     - transcendence

  jwt:
    build:
      context: ./requirements/JWT
      dockerfile: Dockerfile
    container_name: tr-JWT
    # env_file:
    #   - .env
    networks:
      - transcendence
    restart: unless-stopped

  fa:
    build:
      context: ./requirements/2FA
      dockerfile: Dockerfile
    container_name: tr-2FA
    # env_file:
    #   - .env
    networks:
      - transcendence
    restart: unless-stopped

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms512m -Xmx512m
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   networks:
  #     - elk

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.17.1
  #   container_name: logstash
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - "5044:5044"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.17.1
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - elk

  # log:
  #   build:
  #    context: ./requirements/log
  #    dockerfile: Dockerfile
  #   container_name: tr-log
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   depends_on:
  #     - database
  #   networks:
  #     - transcendence


networks:
  transcendence:
    name: tr-transcendence
    driver: bridge
    external: false
  # elk:
  #   name: tr-elk
  #   driver: bridge
  #   external: false
